generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Chat {
    pkId                      BigInt      @id @default(autoincrement()) @map("pk_id")
    sessionId                 String      @map("session_id")
    archived                  Boolean?    @map("archived")
    contactPrimaryIdentityKey Bytes?      @map("contact_primary_identity_key")
    conversationTimestamp     BigInt?     @map("conversation_timestamp")
    createdAt                 BigInt?     @map("created_at")
    createdBy                 String?     @map("created_by")
    description               String?     @db.Text @map("description")
    disappearingMode          Json?       @map("disappearing_mode")
    displayName               String?     @map("display_name")
    endOfHistoryTransfer      Boolean?    @map("end_of_history_transfer")
    endOfHistoryTransferType  Int?        @map("end_of_history_transfer_type")
    ephemeralExpiration       Int?        @map("ephemeral_expiration")
    ephemeralSettingTimestamp BigInt?     @map("ephemeral_setting_timestamp")
    id                        String
    isDefaultSubgroup         Boolean?    @map("is_default_subgroup")
    isParentGroup             Boolean?    @map("is_parent_group")
    lastMsgTimestamp          BigInt?     @map("last_msg_timestamp")
    lidJid                    String?     @map("lid_jid")
    markedAsUnread            Boolean?    @map("marked_as_unread")
    mediaVisibility           Int?        @map("media_visibility")
    messages                  Json?       @map("messages")
    muteEndTime               BigInt?     @map("mute_end_time")
    name                      String?     @map("name")
    newJid                    String?     @map("new_jid")
    notSpam                   Boolean?    @map("not_spam")
    oldJid                    String?     @map("old_jid")
    pHash                     String?     @map("p_hash")
    parentGroupId             String?     @map("parent_group_id")
    participant               Json?       @map("participant")
    pinned                    Int?        @map("pinned")
    pnJid                     String?     @map("pn_jid")
    pnhDuplicateLidThread     Boolean?    @map("pnh_duplicate_lid_thread")
    readOnly                  Boolean?    @map("read_only")
    shareOwnPn                Boolean?    @map("share_own_pn")
    support                   Boolean?    @map("support")
    suspended                 Boolean?    @map("suspended")
    tcToken                   Bytes?      @map("tc_token")
    tcTokenSenderTimestamp    BigInt?     @map("tc_token_sender_timestamp")
    tcTokenTimestamp          BigInt?     @map("tc_token_timestamp")
    terminated                Boolean?    @map("terminated")
    unreadCount               Int?        @map("unread_count")
    unreadMentionCount        Int?        @map("unread_mention_count")
    wallpaper                 Json?       @map("wallpaper")
    lastMessageRecvTimestamp  Int?        @map("last_message_recv_timestamp")
    commentsCount             Int?        @map("comments_count")

    @@unique([sessionId, id], map: "unique_id_per_session_id_chat")
    @@index([sessionId])
    @@map("chats")
}

model Contact {
    pkId         BigInt     @id @default(autoincrement()) @map("pk_id")
    sessionId    String     @map("session_id")
    id           String     @map("id")
    name         String?    @map("name")
    notify       String?    @map("notify")
    verifiedName String?    @map("verified_name")
    imgUrl       String?    @db.VarChar(255) @map("img_url")
    status       String?    @map("status")

    @@unique([sessionId, id], map: "unique_id_per_session_id_contact")
    @@index([sessionId])
    @@map("contacts")
}

model Group {
    pkId              BigInt      @id @default(autoincrement()) @map("pk_id")
    sessionId         String      @map("session_id")
    id                String      @map("id")
    owner             String?     @map("owner")
    subject           String      @map("subject")
    subjectOwner      String?     @map("subject_owner")
    subjectTime       Int?        @map("subject_time")
    creation          Int?        @map("creation")
    desc              String?     @map("desc")
    descOwner         String?     @map("desc_owner")
    descId            String?     @map("desc_id")
    restrict          Boolean?    @map("restrict")
    announce          Boolean?    @map("announce")
    size              Int?        @map("size")
    participants      Json        @map("participants")
    ephemeralDuration Int?        @map("ephemeral_duration")
    inviteCode        String?     @db.VarChar(255) @map("invite_code")

    @@unique([sessionId, id], map: "unique_id_per_session_id_group")
    @@index([sessionId])
    @@map("groups")
}

model Message {
    pkId                            BigInt      @id @default(autoincrement()) @map("pk_id")
    sessionId                       String      @map("session_id")
    remoteJid                       String      @map("remote_jid")
    id                              String      @map("id")
    agentId                         String?     @map("agent_id")
    bizPrivacyStatus                Int?        @map("biz_privacy_status")
    broadcast                       Boolean?    @map("broadcast")
    clearMedia                      Boolean?    @map("clear_media")
    duration                        Int?        @map("duration")
    ephemeralDuration               Int?        @map("ephemeral_duration")
    ephemeralOffToOn                Boolean?    @map("ephemeral_off_to_on")
    ephemeralOutOfSync              Boolean?    @map("ephemeral_out_of_sync")
    ephemeralStartTimestamp         BigInt?     @map("ephemeral_start_timestamp")
    finalLiveLocation               Json?       @map("final_live_location")
    futureproofData                 Bytes?      @map("futureproof_data")
    ignore                          Boolean?    @map("ignore")
    keepInChat                      Json?       @map("keep_in_chat")
    key                             Json        @map("key")
    labels                          Json?       @map("labels")
    mediaCiphertextSha256           Bytes?      @map("media_ciphertext_sha256")
    mediaData                       Json?       @map("media_data")
    message                         Json?       @map("message")
    messageC2STimestamp             BigInt?     @map("message_c2s_timestamp")
    messageSecret                   Bytes?      @map("message_secret")
    messageStubParameters           Json?       @map("message_stub_parameters")
    messageStubType                 Int?        @map("message_stub_type")
    messageTimestamp                BigInt?     @map("message_timestamp")
    multicast                       Boolean?    @map("multicast")
    originalSelfAuthorUserJidString String?     @map("original_self_author_user_jid_string")
    participant                     String?     @map("participant")
    paymentInfo                     Json?       @map("payment_info")
    photoChange                     Json?       @map("photo_change")
    pollAdditionalMetadata          Json?       @map("poll_additional_metadata")
    pollUpdates                     Json?       @map("poll_updates")
    pushName                        String?     @map("push_name")
    quotedPaymentInfo               Json?       @map("quoted_payment_info")
    quotedStickerData               Json?       @map("quoted_sticker_data")
    reactions                       Json?       @map("reactions")
    revokeMessageTimestamp          BigInt?     @map("revoke_message_timestamp")
    starred                         Boolean?    @map("starred")
    status                          Int?        @map("status")
    statusAlreadyViewed             Boolean?    @map("status_already_viewed")
    statusPsa                       Json?       @map("status_psa")
    urlNumber                       Boolean?    @map("url_number")
    urlText                         Boolean?    @map("url_text")
    userReceipt                     Json?       @map("user_receipt")
    verifiedBizName                 String?     @map("verified_biz_name")
    eventResponses                  Json?       @map("event_responses")

    @@unique([sessionId, remoteJid, id], map: "unique_message_key_per_session_id")
    @@index([sessionId])
    @@map("messages")
}

model Session {
    pkId      BigInt @id @default(autoincrement()) @map("pk_id")
    sessionId String @map("session_id")
    id        String @map("id")
    data      String @db.LongText @map("data")
    connectionStatus string? @map("connection_status")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at") @default(now())

    @@unique([sessionId, id], map: "unique_id_per_session_id_session")
    @@index([sessionId])
    @@map("sessions")
}
